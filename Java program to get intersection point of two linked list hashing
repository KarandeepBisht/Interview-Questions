
import java.util.*;
    class Node{
        int data;
        Node next;
        Node(int d){
        data=d;
        next=null;
        }
    }
    public class Main
{
 	public static void main(String[] args) {
	Node n1=new Node(1);
	n1.next=new Node(2);
	n1.next.next=new Node(3);
	n1.next.next.next=new Node(4);
	n1.next.next.next.next=new Node(5);
	n1.next.next.next.next.next=new Node(6);
	n1.next.next.next.next.next.next=new Node(7);
	Node n2=new Node(10);
	n2.next=new Node(9);
	n2.next.next=new Node(8);
	n2.next.next.next=n1.next.next.next;
	Print(n1);
	Print(n2);
	System.out.println(mergePoint(n1,n2).data);
    }
    public static void Print(Node n){
        Node curr=n;
        while(curr!=null){
            System.out.print(curr.data+ " ");
            curr=curr.next;
        }
        System.out.println();
    }
    public static Node mergePoint(Node n1, Node n2){
        HashSet<Node> hs=new HashSet<Node>();
        while(n1!=null){
            hs.add(n1);
            n1=n1.next;
        }
        while(n2!=null){
            if(hs.contains(n2)){
                return n2;
            }
            n2=n2.next;
        }
        return null;
    }
}

o/p
1 2 3 4 5 6 7 
10 9 8 4 5 6 7 
4
